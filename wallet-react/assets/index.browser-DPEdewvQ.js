const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./loadCognitoIdentity-DVX9zDsR.js","./index-Bu_tucGQ.js","./date-utils-CyDH336N.js","./index-C86HeXVh.js","./index-BavbAZd7.css","./noAuth-BRTlyyWt.js","./parseJsonBody-B6mzjhma.js","./loadSts-BQo9cqCJ.js","./index-CL0u26Gs.js"])))=>i.map(i=>d[i]);
import{ac as b}from"./index-C86HeXVh.js";import{t as O,a as x,b as N,s as P,H as D,p as K,F as j}from"./date-utils-CyDH336N.js";const T=e=>{var t;return typeof ReadableStream=="function"&&(((t=e==null?void 0:e.constructor)==null?void 0:t.name)===ReadableStream.name||e instanceof ReadableStream)},A="The stream has already been transformed.",H=e=>{var r,s;if(!R(e)&&!T(e)){const i=((s=(r=e==null?void 0:e.__proto__)==null?void 0:r.constructor)==null?void 0:s.name)||e;throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${i}`)}let t=!1;const o=async()=>{if(t)throw new Error(A);return t=!0,await P(e)},n=i=>{if(typeof i.stream!="function")throw new Error(`Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.
If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body`);return i.stream()};return Object.assign(e,{transformToByteArray:o,transformToString:async i=>{const c=await o();if(i==="base64")return O(c);if(i==="hex")return x(c);if(i===void 0||i==="utf8"||i==="utf-8")return N(c);if(typeof TextDecoder=="function")return new TextDecoder(i).decode(c);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(t)throw new Error(A);if(t=!0,R(e))return n(e);if(T(e))return e;throw new Error(`Cannot transform payload to web stream, got ${e}`)}})},R=e=>typeof Blob=="function"&&e instanceof Blob;class C extends Error{constructor(t,o=!0){var s;let n,r=!0;typeof o=="boolean"?(n=void 0,r=o):o!=null&&typeof o=="object"&&(n=o.logger,r=o.tryNextLink??!0),super(t),this.name="ProviderError",this.tryNextLink=r,Object.setPrototypeOf(this,C.prototype),(s=n==null?void 0:n.debug)==null||s.call(n,`@smithy/property-provider ${r?"->":"(!)"} ${t}`)}static from(t,o=!0){return Object.assign(new this(t.message,o),t)}}class l extends C{constructor(t,o=!0){super(t,o),this.name="CredentialsProviderError",Object.setPrototypeOf(this,l.prototype)}}function k(e){return Promise.all(Object.keys(e).reduce((t,o)=>{const n=e[o];return typeof n=="string"?t.push([o,n]):t.push(n().then(r=>[o,r])),t},[])).then(t=>t.reduce((o,[n,r])=>(o[n]=r,o),{}))}function v(e){return async t=>{var u;(u=e.logger)==null||u.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const{GetCredentialsForIdentityCommand:o,CognitoIdentityClient:n}=await b(async()=>{const{GetCredentialsForIdentityCommand:a,CognitoIdentityClient:m}=await import("./loadCognitoIdentity-DVX9zDsR.js").then(d=>d.ah);return{GetCredentialsForIdentityCommand:a,CognitoIdentityClient:m}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),r=a=>{var m,d,y;return((m=e.clientConfig)==null?void 0:m[a])??((d=e.parentClientConfig)==null?void 0:d[a])??((y=t==null?void 0:t.callerClientConfig)==null?void 0:y[a])},{Credentials:{AccessKeyId:s=M(e.logger),Expiration:i,SecretKey:c=L(e.logger),SessionToken:f}=B(e.logger)}=await(e.client??new n(Object.assign({},e.clientConfig??{},{region:r("region"),profile:r("profile")}))).send(new o({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await k(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:s,secretAccessKey:c,sessionToken:f,expiration:i}}}function M(e){throw new l("Response from Amazon Cognito contained no access key ID",{logger:e})}function B(e){throw new l("Response from Amazon Cognito contained no credentials",{logger:e})}function L(e){throw new l("Response from Amazon Cognito contained no secret key",{logger:e})}const S="IdentityIds";class W{constructor(t="aws:cognito-identity-ids"){this.dbName=t}getItem(t){return this.withObjectStore("readonly",o=>{const n=o.get(t);return new Promise(r=>{n.onerror=()=>r(null),n.onsuccess=()=>r(n.result?n.result.value:null)})}).catch(()=>null)}removeItem(t){return this.withObjectStore("readwrite",o=>{const n=o.delete(t);return new Promise((r,s)=>{n.onerror=()=>s(n.error),n.onsuccess=()=>r()})})}setItem(t,o){return this.withObjectStore("readwrite",n=>{const r=n.put({id:t,value:o});return new Promise((s,i)=>{r.onerror=()=>i(r.error),r.onsuccess=()=>s()})})}getDb(){const t=self.indexedDB.open(this.dbName,1);return new Promise((o,n)=>{t.onsuccess=()=>{o(t.result)},t.onerror=()=>{n(t.error)},t.onblocked=()=>{n(new Error("Unable to access DB"))},t.onupgradeneeded=()=>{const r=t.result;r.onerror=()=>{n(new Error("Failed to create object store"))},r.createObjectStore(S,{keyPath:"id"})}})}withObjectStore(t,o){return this.getDb().then(n=>{const r=n.transaction(S,t);return r.oncomplete=()=>n.close(),new Promise((s,i)=>{r.onerror=()=>i(r.error),s(o(r.objectStore(S)))}).catch(s=>{throw n.close(),s})})}}class ${constructor(t={}){this.store=t}getItem(t){return t in this.store?this.store[t]:null}removeItem(t){delete this.store[t]}setItem(t,o){this.store[t]=o}}const q=new $;function F(){return typeof self=="object"&&self.indexedDB?new W:typeof window=="object"&&window.localStorage?window.localStorage:q}function U({accountId:e,cache:t=F(),client:o,clientConfig:n,customRoleArn:r,identityPoolId:s,logins:i,userIdentifier:c=!i||Object.keys(i).length===0?"ANONYMOUS":void 0,logger:f,parentClientConfig:u}){f==null||f.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const a=c?`aws:cognito-identity-credentials:${s}:${c}`:void 0;let m=async d=>{const{GetIdCommand:y,CognitoIdentityClient:E}=await b(async()=>{const{GetIdCommand:h,CognitoIdentityClient:g}=await import("./loadCognitoIdentity-DVX9zDsR.js").then(_=>_.ah);return{GetIdCommand:h,CognitoIdentityClient:g}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),p=h=>{var g;return(n==null?void 0:n[h])??(u==null?void 0:u[h])??((g=d==null?void 0:d.callerClientConfig)==null?void 0:g[h])},I=o??new E(Object.assign({},n??{},{region:p("region"),profile:p("profile")}));let w=a&&await t.getItem(a);if(!w){const{IdentityId:h=z(f)}=await I.send(new y({AccountId:e,IdentityPoolId:s,Logins:i?await k(i):void 0}));w=h,a&&Promise.resolve(t.setItem(a,w)).catch(()=>{})}return m=v({client:I,customRoleArn:r,logins:i,identityId:w}),m(d)};return d=>m(d).catch(async y=>{throw a&&Promise.resolve(t.removeItem(a)).catch(()=>{}),y})}function z(e){throw new l("Response from Amazon Cognito contained no identity ID",{logger:e})}const ne=e=>v({...e}),re=e=>U({...e}),G="169.254.170.2",V="169.254.170.23",J="[fd00:ec2::23]",Y=(e,t)=>{if(e.protocol!=="https:"&&!(e.hostname===G||e.hostname===V||e.hostname===J)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;const o=e.hostname.split("."),n=r=>{const s=parseInt(r,10);return 0<=s&&s<=255};if(o[0]==="127"&&n(o[1])&&n(o[2])&&n(o[3])&&o.length===4)return}throw new l(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`,{logger:t})}};function Q(e){return new D({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((t,[o,n])=>(t[o]=n,t),{}),fragment:e.hash})}async function X(e,t){const n=await H(e.body).transformToString();if(e.statusCode===200){const r=JSON.parse(n);if(typeof r.AccessKeyId!="string"||typeof r.SecretAccessKey!="string"||typeof r.Token!="string"||typeof r.Expiration!="string")throw new l("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:t});return{accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,sessionToken:r.Token,expiration:K(r.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let r={};try{r=JSON.parse(n)}catch{}throw Object.assign(new l(`Server responded with status: ${e.statusCode}`,{logger:t}),{Code:r.Code,Message:r.Message})}throw new l(`Server responded with status: ${e.statusCode}`,{logger:t})}const Z=(e,t,o)=>async()=>{for(let n=0;n<t;++n)try{return await e()}catch{await new Promise(s=>setTimeout(s,o))}return await e()},se=(e={})=>{var s;(s=e.logger)==null||s.debug("@aws-sdk/credential-provider-http - fromHttp");let t;const o=e.credentialsFullUri;if(o)t=o;else throw new l("No HTTP credential provider host provided.",{logger:e.logger});const n=new URL(t);Y(n,e.logger);const r=new j;return Z(async()=>{const i=Q(n);e.authorizationToken&&(i.headers.Authorization=e.authorizationToken);const c=await r.handle(i);return X(c.response)},e.maxRetries??3,e.timeout??1e3)},ie=e=>{let t;return async()=>{var i;(i=e.logger)==null||i.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");const o={...e.params,RoleSessionName:e.params.RoleSessionName??"aws-sdk-js-"+Date.now()};if(o!=null&&o.SerialNumber){if(!e.mfaCodeProvider)throw new l("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",{tryNextLink:!1,logger:e.logger});o.TokenCode=await e.mfaCodeProvider(o==null?void 0:o.SerialNumber)}const{AssumeRoleCommand:n,STSClient:r}=await b(async()=>{const{AssumeRoleCommand:c,STSClient:f}=await import("./loadSts-BQo9cqCJ.js").then(u=>u.l);return{AssumeRoleCommand:c,STSClient:f}},__vite__mapDeps([7,2,1,3,4,5]),import.meta.url);if(t||(t=new r({...e.clientConfig,credentials:e.masterCredentials})),e.clientPlugins)for(const c of e.clientPlugins)t.middlewareStack.use(c);const{Credentials:s}=await t.send(new n(o));if(!s||!s.AccessKeyId||!s.SecretAccessKey)throw new l(`Invalid response from STS.assumeRole call with role ${o.RoleArn}`,{logger:e.logger});return{accessKeyId:s.AccessKeyId,secretAccessKey:s.SecretAccessKey,sessionToken:s.SessionToken,expiration:s.Expiration,credentialScope:s.CredentialScope}}},ee=e=>async t=>{var a;(a=e.logger)==null||a.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");const{roleArn:o,roleSessionName:n,webIdentityToken:r,providerId:s,policyArns:i,policy:c,durationSeconds:f}=e;let{roleAssumerWithWebIdentity:u}=e;if(!u){const{getDefaultRoleAssumerWithWebIdentity:m}=await b(async()=>{const{getDefaultRoleAssumerWithWebIdentity:d}=await import("./index-CL0u26Gs.js");return{getDefaultRoleAssumerWithWebIdentity:d}},__vite__mapDeps([8,7,2,1,3,4,5]),import.meta.url);u=m({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:{...t==null?void 0:t.callerClientConfig,...e.parentClientConfig}},e.clientPlugins)}return u({RoleArn:o,RoleSessionName:n??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:r,ProviderId:s,PolicyArns:i,Policy:c,DurationSeconds:f})},ce=e=>ee({...e});export{ne as fromCognitoIdentity,re as fromCognitoIdentityPool,se as fromHttp,ie as fromTemporaryCredentials,ce as fromWebToken};
