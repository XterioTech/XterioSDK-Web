const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./loadCognitoIdentity-D9aRrbYs.js","./index-BFaTObwE.js","./date-utils-CnaK6UUR.js","./index-Dxfqu4BN.js","./index-KvNUIOYO.css","./noAuth-BRTlyyWt.js","./parseJsonBody-CtDctivp.js","./loadSts-Ml3cEGBW.js","./create-aggregated-client-sX0lpe6c.js","./index-BYaNshLe.js"])))=>i.map(i=>d[i]);
var H=Object.defineProperty;var $=(e,t,o)=>t in e?H(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;var k=(e,t,o)=>$(e,typeof t!="symbol"?t+"":t,o);import{a8 as R}from"./index-Dxfqu4BN.js";import{t as q,a as L,b as M,s as B,H as W,p as U,F,n as z}from"./date-utils-CnaK6UUR.js";const N=e=>{var t;return typeof ReadableStream=="function"&&(((t=e==null?void 0:e.constructor)==null?void 0:t.name)===ReadableStream.name||e instanceof ReadableStream)},x="The stream has already been transformed.",G=e=>{var r,s;if(!D(e)&&!N(e)){const i=((s=(r=e==null?void 0:e.__proto__)==null?void 0:r.constructor)==null?void 0:s.name)||e;throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${i}`)}let t=!1;const o=async()=>{if(t)throw new Error(x);return t=!0,await B(e)},n=i=>{if(typeof i.stream!="function")throw new Error(`Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.
If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body`);return i.stream()};return Object.assign(e,{transformToByteArray:o,transformToString:async i=>{const c=await o();if(i==="base64")return q(c);if(i==="hex")return L(c);if(i===void 0||i==="utf8"||i==="utf-8")return M(c);if(typeof TextDecoder=="function")return new TextDecoder(i).decode(c);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(t)throw new Error(x);if(t=!0,D(e))return n(e);if(N(e))return e;throw new Error(`Cannot transform payload to web stream, got ${e}`)}})},D=e=>typeof Blob=="function"&&e instanceof Blob;class O extends Error{constructor(t,o=!0){var s;let n,r=!0;typeof o=="boolean"?(n=void 0,r=o):o!=null&&typeof o=="object"&&(n=o.logger,r=o.tryNextLink??!0),super(t),this.name="ProviderError",this.tryNextLink=r,Object.setPrototypeOf(this,O.prototype),(s=n==null?void 0:n.debug)==null||s.call(n,`@smithy/property-provider ${r?"->":"(!)"} ${t}`)}static from(t,o=!0){return Object.assign(new this(t.message,o),t)}}class h extends O{constructor(t,o=!0){super(t,o),this.name="CredentialsProviderError",Object.setPrototypeOf(this,h.prototype)}}function P(e){return Promise.all(Object.keys(e).reduce((t,o)=>{const n=e[o];return typeof n=="string"?t.push([o,n]):t.push(n().then(r=>[o,r])),t},[])).then(t=>t.reduce((o,[n,r])=>(o[n]=r,o),{}))}function j(e){return async t=>{var w;(w=e.logger)==null||w.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const{GetCredentialsForIdentityCommand:o,CognitoIdentityClient:n}=await R(async()=>{const{GetCredentialsForIdentityCommand:l,CognitoIdentityClient:a}=await import("./loadCognitoIdentity-D9aRrbYs.js").then(u=>u.ah);return{GetCredentialsForIdentityCommand:l,CognitoIdentityClient:a}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),r=l=>{var a,u,S;return((a=e.clientConfig)==null?void 0:a[l])??((u=e.parentClientConfig)==null?void 0:u[l])??((S=t==null?void 0:t.callerClientConfig)==null?void 0:S[l])},{Credentials:{AccessKeyId:s=V(e.logger),Expiration:i,SecretKey:c=Y(e.logger),SessionToken:d}=J(e.logger)}=await(e.client??new n(Object.assign({},e.clientConfig??{},{region:r("region"),profile:r("profile")}))).send(new o({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await P(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:s,secretAccessKey:c,sessionToken:d,expiration:i}}}function V(e){throw new h("Response from Amazon Cognito contained no access key ID",{logger:e})}function J(e){throw new h("Response from Amazon Cognito contained no credentials",{logger:e})}function Y(e){throw new h("Response from Amazon Cognito contained no secret key",{logger:e})}const v="IdentityIds";class Q{constructor(t="aws:cognito-identity-ids"){k(this,"dbName");this.dbName=t}getItem(t){return this.withObjectStore("readonly",o=>{const n=o.get(t);return new Promise(r=>{n.onerror=()=>r(null),n.onsuccess=()=>r(n.result?n.result.value:null)})}).catch(()=>null)}removeItem(t){return this.withObjectStore("readwrite",o=>{const n=o.delete(t);return new Promise((r,s)=>{n.onerror=()=>s(n.error),n.onsuccess=()=>r()})})}setItem(t,o){return this.withObjectStore("readwrite",n=>{const r=n.put({id:t,value:o});return new Promise((s,i)=>{r.onerror=()=>i(r.error),r.onsuccess=()=>s()})})}getDb(){const t=self.indexedDB.open(this.dbName,1);return new Promise((o,n)=>{t.onsuccess=()=>{o(t.result)},t.onerror=()=>{n(t.error)},t.onblocked=()=>{n(new Error("Unable to access DB"))},t.onupgradeneeded=()=>{const r=t.result;r.onerror=()=>{n(new Error("Failed to create object store"))},r.createObjectStore(v,{keyPath:"id"})}})}withObjectStore(t,o){return this.getDb().then(n=>{const r=n.transaction(v,t);return r.oncomplete=()=>n.close(),new Promise((s,i)=>{r.onerror=()=>i(r.error),s(o(r.objectStore(v)))}).catch(s=>{throw n.close(),s})})}}class X{constructor(t={}){k(this,"store");this.store=t}getItem(t){return t in this.store?this.store[t]:null}removeItem(t){delete this.store[t]}setItem(t,o){this.store[t]=o}}const Z=new X;function ee(){return typeof self=="object"&&self.indexedDB?new Q:typeof window=="object"&&window.localStorage?window.localStorage:Z}function te({accountId:e,cache:t=ee(),client:o,clientConfig:n,customRoleArn:r,identityPoolId:s,logins:i,userIdentifier:c=!i||Object.keys(i).length===0?"ANONYMOUS":void 0,logger:d,parentClientConfig:w}){d==null||d.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const l=c?`aws:cognito-identity-credentials:${s}:${c}`:void 0;let a=async u=>{const{GetIdCommand:S,CognitoIdentityClient:T}=await R(async()=>{const{GetIdCommand:f,CognitoIdentityClient:m}=await import("./loadCognitoIdentity-D9aRrbYs.js").then(y=>y.ah);return{GetIdCommand:f,CognitoIdentityClient:m}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),b=f=>{var m;return(n==null?void 0:n[f])??(w==null?void 0:w[f])??((m=u==null?void 0:u.callerClientConfig)==null?void 0:m[f])},p=o??new T(Object.assign({},n??{},{region:b("region"),profile:b("profile")}));let g=l&&await t.getItem(l);if(!g){const{IdentityId:f=ne(d)}=await p.send(new S({AccountId:e,IdentityPoolId:s,Logins:i?await P(i):void 0}));g=f,l&&Promise.resolve(t.setItem(l,g)).catch(()=>{})}return a=j({client:p,customRoleArn:r,logins:i,identityId:g}),a(u)};return u=>a(u).catch(async S=>{throw l&&Promise.resolve(t.removeItem(l)).catch(()=>{}),S})}function ne(e){throw new h("Response from Amazon Cognito contained no identity ID",{logger:e})}const we=e=>j({...e}),ye=e=>te({...e}),oe="169.254.170.2",re="169.254.170.23",se="[fd00:ec2::23]",ie=(e,t)=>{if(e.protocol!=="https:"&&!(e.hostname===oe||e.hostname===re||e.hostname===se)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;const o=e.hostname.split("."),n=r=>{const s=parseInt(r,10);return 0<=s&&s<=255};if(o[0]==="127"&&n(o[1])&&n(o[2])&&n(o[3])&&o.length===4)return}throw new h(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`,{logger:t})}};function ce(e){return new W({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((t,[o,n])=>(t[o]=n,t),{}),fragment:e.hash})}async function ae(e,t){const n=await G(e.body).transformToString();if(e.statusCode===200){const r=JSON.parse(n);if(typeof r.AccessKeyId!="string"||typeof r.SecretAccessKey!="string"||typeof r.Token!="string"||typeof r.Expiration!="string")throw new h("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:t});return{accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,sessionToken:r.Token,expiration:U(r.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let r={};try{r=JSON.parse(n)}catch{}throw Object.assign(new h(`Server responded with status: ${e.statusCode}`,{logger:t}),{Code:r.Code,Message:r.Message})}throw new h(`Server responded with status: ${e.statusCode}`,{logger:t})}const de=(e,t,o)=>async()=>{for(let n=0;n<t;++n)try{return await e()}catch{await new Promise(s=>setTimeout(s,o))}return await e()},Se=(e={})=>{var s;(s=e.logger)==null||s.debug("@aws-sdk/credential-provider-http - fromHttp");let t;const o=e.credentialsFullUri;if(o)t=o;else throw new h("No HTTP credential provider host provided.",{logger:e.logger});const n=new URL(t);ie(n,e.logger);const r=new F;return de(async()=>{const i=ce(n);e.authorizationToken&&(i.headers.Authorization=e.authorizationToken);const c=await r.handle(i);return ae(c.response)},e.maxRetries??3,e.timeout??1e3)},le="us-east-1",ge=(e,t,o)=>{let n;return async(r={})=>{var u,S,T,b,p,g;const{callerClientConfig:s}=r,i=((u=e.clientConfig)==null?void 0:u.profile)??(s==null?void 0:s.profile),c=e.logger??(s==null?void 0:s.logger);c==null||c.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");const d={...e.params,RoleSessionName:e.params.RoleSessionName??"aws-sdk-js-"+Date.now()};if(d!=null&&d.SerialNumber){if(!e.mfaCodeProvider)throw new h("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",{tryNextLink:!1,logger:c});d.TokenCode=await e.mfaCodeProvider(d==null?void 0:d.SerialNumber)}const{AssumeRoleCommand:w,STSClient:l}=await R(async()=>{const{AssumeRoleCommand:f,STSClient:m}=await import("./loadSts-Ml3cEGBW.js").then(y=>y.l);return{AssumeRoleCommand:f,STSClient:m}},__vite__mapDeps([7,1,2,3,4,5,8]),import.meta.url);if(!n){const f=typeof t=="function"?t():void 0,m=[e.masterCredentials,(S=e.clientConfig)==null?void 0:S.credentials,void(s==null?void 0:s.credentials),(T=s==null?void 0:s.credentialDefaultProvider)==null?void 0:T.call(s),f];let y="STS client default credentials";if(m[0])y="options.masterCredentials";else if(m[1])y="options.clientConfig.credentials";else{if(m[2])throw y="caller client's credentials",new Error("fromTemporaryCredentials recursion in callerClientConfig.credentials");m[3]?y="caller client's credentialDefaultProvider":m[4]&&(y="AWS SDK default credentials")}const I=[(b=e.clientConfig)==null?void 0:b.region,s==null?void 0:s.region,await(o==null?void 0:o({profile:i})),le];let A="default partition's default region";I[0]?A="options.clientConfig.region":I[1]?A="caller client's region":I[2]&&(A="file or env region");const E=[K((p=e.clientConfig)==null?void 0:p.requestHandler),K(s==null?void 0:s.requestHandler)];let _="STS default requestHandler";E[0]?_="options.clientConfig.requestHandler":E[1]&&(_="caller client's requestHandler"),(g=c==null?void 0:c.debug)==null||g.call(c,`@aws-sdk/credential-providers - fromTemporaryCredentials STS client init with ${A}=${await z(C(I))()}, ${y}, ${_}.`),n=new l({...e.clientConfig,credentials:C(m),logger:c,profile:i,region:C(I),requestHandler:C(E)})}if(e.clientPlugins)for(const f of e.clientPlugins)n.middlewareStack.use(f);const{Credentials:a}=await n.send(new w(d));if(!a||!a.AccessKeyId||!a.SecretAccessKey)throw new h(`Invalid response from STS.assumeRole call with role ${d.RoleArn}`,{logger:c});return{accessKeyId:a.AccessKeyId,secretAccessKey:a.SecretAccessKey,sessionToken:a.SessionToken,expiration:a.Expiration,credentialScope:a.CredentialScope}}},K=e=>{var t;return((t=e==null?void 0:e.metadata)==null?void 0:t.handlerProtocol)==="h2"?void 0:e},C=e=>{for(const t of e)if(t!==void 0)return t},ue=e=>async t=>{var l;(l=e.logger)==null||l.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");const{roleArn:o,roleSessionName:n,webIdentityToken:r,providerId:s,policyArns:i,policy:c,durationSeconds:d}=e;let{roleAssumerWithWebIdentity:w}=e;if(!w){const{getDefaultRoleAssumerWithWebIdentity:a}=await R(async()=>{const{getDefaultRoleAssumerWithWebIdentity:u}=await import("./index-BYaNshLe.js");return{getDefaultRoleAssumerWithWebIdentity:u}},__vite__mapDeps([9,7,1,2,3,4,5,8]),import.meta.url);w=a({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:{...t==null?void 0:t.callerClientConfig,...e.parentClientConfig}},e.clientPlugins)}return w({RoleArn:o,RoleSessionName:n??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:r,ProviderId:s,PolicyArns:i,Policy:c,DurationSeconds:d})},be=e=>ue({...e});export{we as fromCognitoIdentity,ye as fromCognitoIdentityPool,Se as fromHttp,ge as fromTemporaryCredentials,be as fromWebToken};
